Area = c(20, 50, 100, 200, 500, 1500),
promedio = c(20, 50, 100, 200, 500, 1500),
maxima = c(20, 50, 100, 200, 500, 1500),
Area2 = c(20, 50, 100, 200, 500, 1500),
promedio2 = c(20, 50, 100, 200, 500, 1500),
maxima2 = c(20, 50, 100, 200, 500, 1500)
)
names(Centro_ABC) <- c(
"Año", "Probabilidad",
"Área Afectada (%)", "Promedio (m)", "Máxima (m)",
"Área Afectada  (%)", "Promedio  (m)", "Máxima  (m)"
)
Centro_XYZ <- data.frame(
Ano = c(20, 50, 100, 200, 500, 1500),
Probabilidad = c("1%", "10%", "1%", "10%","1%", "10%"),
Area = c(20, 50, 100, 200, 500, 1500),
promedio = c(30, 530, 1300, 2300, 5300, 13500),
maxima = c(230, 530, 1300, 2300, 5300, 13500),
Area2 = c(230, 530, 1300, 3200, 3500, 31500),
promedio2 = c(320, 350, 3100, 3200, 3500, 31500),
maxima2 = c(320, 350, 3100, 3200, 3500, 13500)
)
names(Centro_XYZ) <- c(
"Año", "Probabilidad",
"Área Afectada (%)", "Promedio (m)", "Máxima (m)",
"Área Afectada  (%)", "Promedio  (m)", "Máxima  (m)"
)
Centro_SDF <- data.frame(
Ano = c(20, 50, 100, 200, 500, 1500),
Probabilidad = c("1%", "10%", "1%", "10%","1%", "10%"),
Area = c(20, 50, 100, 200, 500, 1500),
promedio = c(340, 4530, 4100, 4300, 4300, 43500),
maxima = c(4230, 4530, 4130, 4300, 4300, 13500),
Area2 = c(230, 530, 1300, 3200, 3500, 31500),
promedio2 = c(320, 350, 3100, 3200, 3500, 31500),
maxima2 = c(320, 350, 3100, 3200, 3500, 13500)
)
names(Centro_SDF) <- c(
"Año", "Probabilidad",
"Área Afectada (%)", "Promedio (m)", "Máxima (m)",
"Área Afectada  (%)", "Promedio  (m)", "Máxima  (m)"
)
source("2. Excel/2. eso e.R")
base_nombres <- ls()
cliente <- "Cliente ABC"
fecha <- format(Sys.Date(), "%B %Y")
fecha <- format(Sys.Date(), "%B %Y")
fecha <- paste0(toupper(substring(fecha, 1, 1)), substring(fecha, 2))
rm(list = ls())
library(readxl)
library(tidyverse)
library(dplyr)
cat("\014")
Centro_ABC <- data.frame(
Ano = c(20, 50, 100, 200, 500, 1500),
Probabilidad = c("1%", "10%", "1%", "10%","1%", "10%"),
Area = c(20, 50, 100, 200, 500, 1500),
promedio = c(20, 50, 100, 200, 500, 1500),
maxima = c(20, 50, 100, 200, 500, 1500),
Area2 = c(20, 50, 100, 200, 500, 1500),
promedio2 = c(20, 50, 100, 200, 500, 1500),
maxima2 = c(20, 50, 100, 200, 500, 1500)
)
names(Centro_ABC) <- c(
"Año", "Probabilidad",
"Área Afectada (%)", "Promedio (m)", "Máxima (m)",
"Área Afectada  (%)", "Promedio  (m)", "Máxima  (m)"
)
Centro_XYZ <- data.frame(
Ano = c(20, 50, 100, 200, 500, 1500),
Probabilidad = c("1%", "10%", "1%", "10%","1%", "10%"),
Area = c(20, 50, 100, 200, 500, 1500),
promedio = c(30, 530, 1300, 2300, 5300, 13500),
maxima = c(230, 530, 1300, 2300, 5300, 13500),
Area2 = c(230, 530, 1300, 3200, 3500, 31500),
promedio2 = c(320, 350, 3100, 3200, 3500, 31500),
maxima2 = c(320, 350, 3100, 3200, 3500, 13500)
)
names(Centro_XYZ) <- c(
"Año", "Probabilidad",
"Área Afectada (%)", "Promedio (m)", "Máxima (m)",
"Área Afectada  (%)", "Promedio  (m)", "Máxima  (m)"
)
Centro_SDF <- data.frame(
Ano = c(20, 50, 100, 200, 500, 1500),
Probabilidad = c("1%", "10%", "1%", "10%","1%", "10%"),
Area = c(20, 50, 100, 200, 500, 1500),
promedio = c(340, 4530, 4100, 4300, 4300, 43500),
maxima = c(4230, 4530, 4130, 4300, 4300, 13500),
Area2 = c(230, 530, 1300, 3200, 3500, 31500),
promedio2 = c(320, 350, 3100, 3200, 3500, 31500),
maxima2 = c(320, 350, 3100, 3200, 3500, 13500)
)
names(Centro_SDF) <- c(
"Año", "Probabilidad",
"Área Afectada (%)", "Promedio (m)", "Máxima (m)",
"Área Afectada  (%)", "Promedio  (m)", "Máxima  (m)"
)
source("2. Excel/2. eso e.R")
base_nombres <- ls()
cliente <- "Cliente ABC"
fecha <- format(Sys.Date(), "%B %Y")
fecha <- paste0(toupper(substring(fecha, 1, 1)), substring(fecha, 2))
# Rutas
ruta_maps_flood <- "1. Mapas"
ruta_maps_flood <- file.path(ruta_maps_flood, cliente)
ruta_maps_flood
ruta_maps_flood
ruta_maps_flood
source(here("2. Excel", "1. eso.R"))
# Cargar librerías necesarias
library(readxl)    # si usas read_excel
library(dplyr)     # si haces transformaciones
library(knitr)     # para usar kable
library(here)      # puede fallar el source en los .Rmd <- here()
source(here("2. Excel", "1. eso.R"))
# Cargar librerías necesarias
library(readxl)    # si usas read_excel
library(dplyr)     # si haces transformaciones
library(knitr)     # para usar kable
library(here)      # puede fallar el source en los .Rmd <- here()
source(here("2. Excel", "1. eso.R"))
library(here)
source(here("2. Excel", "2. eso.R"))
source(here("2. Excel", "2. eso e.R"))
# rm(list = ls())
# cat("\014")
library(readxl)
flood_location <- read_excel("2. Excel/Flood Input.xlsx")
source(here("2. Excel", "2. eso e.R"))
source(here("2. Excel", "2. eso e.R"))
rm(list = ls())
cat("\014")
library(readxl)
flood_location <- read_excel("2. Excel/Flood Input.xlsx")
source(here("2. Excel", "1. eso.R"))
source(here("2. Excel", "1. eso.R"))
source(here("2. Excel", "1. eso.R"))
rm(list = ls())
library(readxl)
library(tidyverse)
library(dplyr)
cat("\014")
Centro_ABC <- data.frame(
Ano = c(20, 50, 100, 200, 500, 1500),
Probabilidad = c("1%", "10%", "1%", "10%","1%", "10%"),
Area = c(20, 50, 100, 200, 500, 1500),
promedio = c(20, 50, 100, 200, 500, 1500),
maxima = c(20, 50, 100, 200, 500, 1500),
Area2 = c(20, 50, 100, 200, 500, 1500),
promedio2 = c(20, 50, 100, 200, 500, 1500),
maxima2 = c(20, 50, 100, 200, 500, 1500)
)
names(Centro_ABC) <- c(
"Año", "Probabilidad",
"Área Afectada (%)", "Promedio (m)", "Máxima (m)",
"Área Afectada  (%)", "Promedio  (m)", "Máxima  (m)"
)
Centro_XYZ <- data.frame(
Ano = c(20, 50, 100, 200, 500, 1500),
Probabilidad = c("1%", "10%", "1%", "10%","1%", "10%"),
Area = c(20, 50, 100, 200, 500, 1500),
promedio = c(30, 530, 1300, 2300, 5300, 13500),
maxima = c(230, 530, 1300, 2300, 5300, 13500),
Area2 = c(230, 530, 1300, 3200, 3500, 31500),
promedio2 = c(320, 350, 3100, 3200, 3500, 31500),
maxima2 = c(320, 350, 3100, 3200, 3500, 13500)
)
names(Centro_XYZ) <- c(
"Año", "Probabilidad",
"Área Afectada (%)", "Promedio (m)", "Máxima (m)",
"Área Afectada  (%)", "Promedio  (m)", "Máxima  (m)"
)
Centro_SDF <- data.frame(
Ano = c(20, 50, 100, 200, 500, 1500),
Probabilidad = c("1%", "10%", "1%", "10%","1%", "10%"),
Area = c(20, 50, 100, 200, 500, 1500),
promedio = c(340, 4530, 4100, 4300, 4300, 43500),
maxima = c(4230, 4530, 4130, 4300, 4300, 13500),
Area2 = c(230, 530, 1300, 3200, 3500, 31500),
promedio2 = c(320, 350, 3100, 3200, 3500, 31500),
maxima2 = c(320, 350, 3100, 3200, 3500, 13500)
)
names(Centro_SDF) <- c(
"Año", "Probabilidad",
"Área Afectada (%)", "Promedio (m)", "Máxima (m)",
"Área Afectada  (%)", "Promedio  (m)", "Máxima  (m)"
)
base_nombres <- ls()
cliente <- "Cliente ABC"
fecha <- format(Sys.Date(), "%B %Y")
fecha <- paste0(toupper(substring(fecha, 1, 1)), substring(fecha, 2))
# Rutas
ruta_maps_flood <- "1. Mapas"
ruta_maps_flood <- file.path(ruta_maps_flood, cliente)
source(here("2. Excel", "1. eso.R"))
source(here("2. Excel", "1. eso.R"))
flood_location <- read_excel("2. Excel/Flood Input.xlsx")
print(here("2. Excel", "1. eso.R"))
rm(list = ls())
cat("\014")
library(readxl)
flood_location <- read_excel("2. Excel/Flood Input.xlsx")
View(flood_location)
source(here("2. Excel", "2. eso e.R"))
# rm(list = ls())
# cat("\014")
library(readxl)
library(here)
flood_location <- read_excel(here("2. Excel", "Flood Input.xlsx"))
source(here("2. Excel", "2. eso e.R"))
# Cargar librerías necesarias
library(readxl)    # si usas read_excel
library(dplyr)     # si haces transformaciones
library(knitr)     # para usar kable
library(here)      # puede fallar el source en los .Rmd <- here()
# Ejecutar el script que genera tus variables/tablas
source(here("2. Excel", "2. eso e.R"))
source(here("2. Excel", "1. eso.R"))
# Ejecutar el script que genera tus variables/tablas
source(here("2. Excel", "2. eso e.R"))
# Ejecutar el script que genera tus variables/tablas
source(here("2. Excel", "2. eso e.R"))
source(here("2. Excel", "1. eso.R"))
# Cargar librerías necesarias
library(readxl)    # si usas read_excel
library(dplyr)     # si haces transformaciones
library(here)      # puede fallar el source en los .Rmd <- here()
# Ejecutar el script que genera tus variables/tablas
source(here("2. Excel", "1. eso.R"))
source(here("2. Excel", "2. eso e.R"))
ruta_maps_flood
# Rutas
ruta_maps_flood <- "1. Mapas"
ruta_maps_flood <- file.path(ruta_maps_flood, cliente,"0. Ubicaciones")
ruta_maps_flood
imagenes
# Obtener imágenes en la carpeta del cliente
imagenes <- list.files(ruta_maps_flood, pattern = "(?i)\\.(png|jpg|jpeg)$", full.names = TRUE)
imagenes_rel
library(here)
imagenes <- list.files(ruta_maps_flood, pattern = "(?i)\\.(png|jpg|jpeg)$", full.names = TRUE)
imagenes_rel <- gsub(paste0(here(), "/"), "", normalizePath(imagenes))
print(imagenes)
print(imagenes_rel)
list.files(ruta_maps_flood)
source(here("2. Excel", "1. eso.R"))
source(here("2. Excel", "2. eso e.R"))
library(here)
# Crear carpeta temporal para imágenes sin espacios
dir.create("temp_maps", showWarnings = FALSE)
# Obtener imágenes desde ruta original
imagenes_origen <- list.files(here(ruta_maps_flood), pattern = "(?i)\\.(png|jpg|jpeg)$", full.names = TRUE)
imagenes_origen
# Copiar a carpeta limpia (sin espacios)
file.copy(imagenes_origen, to = "temp_maps", overwrite = TRUE)
# Listar imágenes copiadas
imagenes_limpias <- list.files("temp_maps", pattern = "(?i)\\.(png|jpg|jpeg)$")
# Insertar imágenes desde carpeta limpia
for (img in imagenes_limpias) {
cat("\\newpage\n")
cat(sprintf("\\begin{center}\n\\includegraphics[width=0.9\\textwidth]{temp_maps/%s}\n\\end{center}\n\n", img))
}
ruta_maps_flood
library(kableExtra)
flood_location %>%
kable(format = "latex", booktabs = TRUE, align = "c") %>%
kable_styling(
latex_options = c("striped", "scale_down", "hold_position"),
font_size = 11,
position = "center",
full_width = FALSE
) %>%
row_spec(0, background = "azuloscuro", color = "white")
# Obtener imágenes de la carpeta (asegúrate que la ruta no tenga espacios)
imagenes <- list.files(here::here(ruta_maps_flood), pattern = "\\.(png|jpg|jpeg)$", full.names = TRUE)
# Crear LaTeX para mostrar las imágenes lado a lado
latex_imagenes <- paste0(
"\\begin{center}",
paste(
sprintf("\\includegraphics[width=0.45\\textwidth]{%s}", imagenes),
collapse = "\\hspace{0.05\\textwidth}"
),
"\\end{center}"
)
cat(latex_imagenes)
ruta_maps_flood
list.files(ruta_maps_flood)
kableExtra::latex_escape()
unlink("3. Reporte/Reporte_cache", recursive = TRUE)
# Ejecutar el script que genera tus variables/tablas
source(here("2. Excel", "1. eso.R"))
# Ejecutar el script que genera tus variables/tablas
source(here("2. Excel", "1. eso.R"))
source(here("2. Excel", "2. eso e.R"))
# Cargar librerías necesarias
library(readxl)    # si usas read_excel
library(dplyr)     # si haces transformaciones
library(dplyr)     # si haces transformaciones
library(knitr)     # para usar kable
library(here)      # puede fallar el source en los .Rmd <- here()
# Ejecutar el script que genera tus variables/tablas
source(here("2. Excel", "1. eso.R"))
source(here("2. Excel", "2. eso e.R"))
base_nombres
ruta_return <- file.path(ruta_maps_flood, cliente)
ruta_return
ruta_return <- here(file.path(ruta_maps_flood, cliente))
ruta_return
base_nombres
# 1. Construir rutas a cada subcarpeta
carpetas <- file.path(ruta_return, base_nombres)
names(carpetas) <- base_nombres
names(carpetas)
# 2. Listar imágenes dentro de cada carpeta
#    Puedes ajustar el patrón si tus imágenes usan otras extensiones.
imagenes_por_centro <- lapply(carpetas, function(dir) {
if (dir.exists(dir)) {
list.files(
path       = dir,
pattern    = "(?i)\\.(png|jpe?g)$",
full.names = TRUE
)
} else {
character(0)
}
})
imagenes_por_centro
library(kableExtra)
library(here)
# --- 1. Obtener rutas de imágenes para cada centro ---
imagenes_por_centro <- lapply(base_nombres, function(centro) {
# carpeta: ruta_return + nombre de carpeta (con "_")
carpeta <- here(ruta_return, centro)
if (dir.exists(carpeta)) {
# listar todos los PNG/JPG/JPEG dentro
list.files(
path       = carpeta,
pattern    = "(?i)\\.(png|jpe?g)$",
full.names = TRUE
)
} else {
character(0)
}
})
imagenes_por_centro
# carpeta: ruta_return + nombre de carpeta (con "_")
carpeta <- here(ruta_return, centro)
library(kableExtra)
library(here)
# --- 1. Obtener rutas de imágenes para cada centro ---
imagenes_por_centro <- lapply(base_nombres, function(centro) {
# carpeta: ruta_return + nombre de carpeta (con "_")
carpeta <- here(ruta_return, centro)
if (dir.exists(carpeta)) {
# listar todos los PNG/JPG/JPEG dentro
list.files(
path       = carpeta,
pattern    = "(?i)\\.(png|jpe?g)$",
full.names = TRUE
)
} else {
character(0)
}
})
# nombrar cada elemento de la lista
names(imagenes_por_centro) <- base_nombres
names(imagenes_por_centro)
for (i in seq_along(base_nombres)) {
centro       <- base_nombres[i]
nombre_limpio <- gsub("_", " ", centro)
# Nueva página en cada iteración
cat("\\newpage\n")
# Título general en la primera página
if (i == 1) {
cat(
"\\noindent ",
"\\textbf{\\textcolor{azuloscuro}{",
"\\fontsize{28}{32}\\selectfont Return Periods",
"}}",
"\n\n"
)
}
cat("\\vspace{0.5cm}\n\n")
# Subtítulo por centro
cat(
sprintf(
"\\noindent \\textbf{\\textcolor{turquesa}{\\fontsize{16}{20}\\selectfont %s}}",
nombre_limpio
),
"\n\n"
)
cat("\\vspace{0.5cm}\n\n")
# Tabla vacía 1×3
empty_tab <- matrix("", nrow = 1, ncol = 3)
kol <- kable(
empty_tab,
format   = "latex",
booktabs = TRUE,
align    = "c",
col.names = c("", "", "")
) %>%
kable_styling(
latex_options = "hold_position",
position      = "center",
full_width    = FALSE
)
# Imprimir la tabla
cat(kol)
cat("\n\n")
}
imagenes_por_centro
names(imagenes_por_centro)
nombre_limpio
base_nombres
base_limpio <- gsub("_", " ", base_nombres)
library(kableExtra)
for (i in seq_along(base_limpio)) {
centro       <- base_limpio[i]
nombre_limpio <- centro
# Listar todas las imágenes de la carpeta
rutas <- list.files(
path       = file.path(ruta_return, centro),
pattern    = "(?i)\\.(png|jpe?g)$",
full.names = TRUE
)
# Partir en grupos de hasta 3
grupos <- split(rutas, ceiling(seq_along(rutas)/3))
for (j in seq_along(grupos)) {
imgs <- grupos[[j]]
# Nueva página
cat("\\newpage\n")
# Sólo en i=1,j=1: título Return Periods
if (i == 1 && j == 1) {
cat("\\noindent ",
"\\textbf{\\textcolor{azuloscuro}{",
"\\fontsize{28}{32}\\selectfont Return Periods",
"}}",
"\n\n")
}
# Subtítulo por centro
cat(sprintf(
"\\noindent \\textbf{\\textcolor{turquesa}{\\fontsize{16}{20}\\selectfont %s}}",
nombre_limpio
), "\n\n")
# Construir tabla de imágenes: 1 fila, hasta 3 columnas
ncol <- min(3, length(imgs))
cell_latex <- paste0(
"\\includegraphics[width=0.3\\textwidth]{", imgs, "}"
)
mat <- matrix(cell_latex, nrow = 1, ncol = ncol)
# Imprimir con kableExtra centrado
cat(
kable(
mat,
format   = "latex",
booktabs = TRUE,
escape   = FALSE,
col.names = rep("", ncol)
) %>%
kable_styling(
latex_options = "hold_position",
position      = "center",
full_width    = FALSE
)
)
cat("\n\n")
}
}
# Cargar librerías necesarias
library(readxl)    # si usas read_excel
library(dplyr)     # si haces transformaciones
library(knitr)     # para usar kable
library(here)      # puede fallar el source en los .Rmd <- here()
# Ejecutar el script que genera tus variables/tablas
source(here("2. Excel", "1. eso.R"))
source(here("2. Excel", "2. eso e.R"))
ruta_return
base_nombres
centro
ruta_return
centro
carpeta
library(here)
library(kableExtra)
# Crear sección
cat("\\newpage\n")
cat("\\noindent \\textbf{\\textcolor{azuloscuro}{\\fontsize{28}{32}\\selectfont Return Periods}}\n")
cat("\\vspace{0.5cm}\n\n")
cat(sprintf("\\textbf{\\textcolor{turquesa}{\\fontsize{16}{20}\\selectfont %s}}\n\n", centro))
ruta_return
rm(list = ls())
library(readxl)
library(tidyverse)
library(dplyr)
library(here)
cat("\014")
# Rutas
ruta_maps_flood <- "1. Mapas"
ruta_return <- here(file.path(ruta_maps_flood, cliente))
cliente <- "Cliente ABC"
ruta_maps_flood <- file.path(ruta_maps_flood, cliente,"Ubicaciones")
ruta_maps_flood
ruta_return
ruta_return <- here(file.path(ruta_maps_flood, cliente))
ruta_return
# Rutas
ruta_maps <- "1. Mapas"
ruta_maps_flood <- file.path(ruta_maps, cliente,"Ubicaciones")
ruta_maps_flood
ruta_return <- here(file.path(ruta_maps, cliente))
ruta_return
